{
    "COURSE_OUTLINE_PROMPT": "Generate a course outline based on the input files and instructions provided. The course outline should include the following sections:\nThe number of modules specified, the module name, the module description and each module should have the learning outcomes\nDo not have any text, just give me the course outline\nInput:\n- Instructions: Additional instructions for generating the course outline\n{INSTRUCTIONS}\nOutput:\n- Course Outline: The generated course outline with the specified sections and modules",
    "COURSE_OUTLINE_TO_MODULES_PROMPT": "You are given a course outline. \nYou have to convert it into modules in the following format:\nInstructions:\n1. Your output will be used as an input to python code. So make sure the output is in the correct format.\n2. Do not return anything else other than the modules.\n```\njson\n{{ \"modules\":[\n        {{\n    \"module_name\": \"Module name\",\n    \"module_description\": \"This module covers the basics of the course\",\n        }},\n        {{\n    \"module_name\": \"Module name\",\n    \"module_description\": \"This module covers the advanced topics of the course\",\n        }}\n    ]\n}}\n```\nInput:\n- Course Outline: The course outline with the specified sections and modules\n{COURSE_OUTLINE}\nOutput:\n- Modules: The modules generated from the course outline in the specified format",
    "GENERATE_STREAMLIT_CODE_PROMPT": "Based on the following technical requirements:\n \n ```\n {FORMAL_REQUIREMENTS}\n ```\n And referencing the following tech stack or repository:\n \n ```\n {TECH_STACK_INFO}\n ```\n Generate a Python-based Streamlit application page that performs the statistical analysis and visualizations specified below:\n ```\n {ANALYSIS_AND_VISUALIZATIONS}\n ```\n **Learning Outcomes**\n - This application should clearly display the following learning outcomes on the frontend:\n \n ```\n {LEARNING_OUTCOMES}\n ```\n - Include an introductory section in the UI that explains these learning outcomes to the user and clarifies how each component of the application aligns with them. Each analytical or visualization section should, where relevant, reference the corresponding learning outcome.\n This will be a standalone, single-page application embedded within a larger Streamlit container app. It should integrate seamlessly with other pages in the container without relying on global configurations like `st.set_page_config()`. Follow these essential guidelines:\n \n **1. Code Modularity and Structure**\n - Structure the code modularly, separating each major operation (e.g., data loading, preprocessing, and plotting) into distinct functions.\n - Use clear and descriptive function names (e.g., `load_data()`, `perform_analysis()`, `generate_plot()`) to describe each analytical or visualization task.\n - Ensure the application has a single entry point, defined in a `main()` function. The entire code should be contained within this `main()` function, which will act as the primary execution point.\n - Avoid setting global configurations such as `st.set_page_config()` since this page is part of a multi-page container application.\n \n **2. Interactivity and User Experience**\n - The application should be highly interactive, using Streamlit widgets (e.g., `st.slider`, `st.selectbox`, `st.checkbox`, `st.text_input`) to allow users to control data inputs, adjust visualization parameters, filter data, and select analysis options.\n - Clearly explain each component’s purpose and interactivity to the user, with instructions presented in the UI. Include tooltips, placeholder texts, and context-sensitive descriptions to guide users on how to use each widget effectively.\n - Ensure the UI follows a logical workflow that guides the user from initial data selection through analysis and interpretation of results.\n \n **3. Analytical and Visualization Requirements**\n - The application should perform all statistical analyses and visualizations as specified in `{ANALYSIS_AND_VISUALIZATIONS}`, with user-adjustable parameters for flexible exploration.\n - Each visualization should be customizable through user inputs, allowing adjustments like axis labels, histogram bin sizes, color schemes, date ranges, etc.\n - Display statistical summaries or key metrics alongside visualizations, such as regression summaries or descriptive statistics, where relevant.\n - Use Streamlit’s chart components (`st.line_chart`, `st.bar_chart`, `st.pyplot`) and make sure all visual outputs update responsively based on user interactions.\n \n **4. Documentation and Code Clarity**\n - Write clear docstrings for each function, describing its purpose, input parameters, and return values.\n - Provide inline comments to clarify complex or non-intuitive sections of the code, ensuring readability for future developers.\n - Structure the code so that default values and configurations are easily replaceable or adaptable.\n \n **5. Flexibility and Extensibility**\n - Design the page so it can be independently maintained, without reliance on external states or global variables.\n - Parameterize hardcoded values (e.g., column names, file paths) where possible, to enable easy adaptation.\n - Design for compatibility with a multi-page app, avoiding dependencies on app-wide configurations.\n \n **Additional Considerations**\n - Add loading indicators (e.g., `st.spinner`) during data processing to improve user experience.\n - Implement error handling for missing data, incompatible types, or invalid inputs with user-friendly error messages.\n - Use `st.cache_data` to optimize performance for repetitive data loading or processing tasks.\n \n **Instructions and User-Facing Descriptions**\n - Provide clear instructions in the UI on using each part of the app. Add tooltips or placeholder texts to guide users on interacting with widgets.\n - Explain how each part of the application contributes to achieving the specified learning outcomes, connecting analytical or visualization components with the learning objectives.\n \n Only return the Streamlit code as a single string, with `import streamlit as st` as the first line and ending with the definition of `def main()`. This `main()` function will serve as the entry point for the application.",
    "REPORT_GENERATION_PROMPT": "You are a report generation assistant tasked with producing a well-formatted context given parsed context.\nYou will be given context from one or more reports that take the form of parsed text.\nYou are responsible for producing a report with interleaving text and images - in the format of interleaving text and \"image\" blocks.\nSince you cannot directly produce an image, the image block takes in a file path - you should write in the file path of the image instead.\nHow do you know which image to generate? Each context chunk will contain metadata including an image render of the source chunk, given as a file path. \nInclude ONLY the images from the chunks that have heavy visual elements (you can get a hint of this if the parsed text contains a lot of tables).\nYou MUST include at least one image block in the output.\nYou MUST output your response as a tool call in order to adhere to the required output format. Do NOT give back normal text.",
    "LECTURE_OUTLINE_PROMPT": "Generate a lecture outline based on the input files and the instructions provided. The lecture outline should the slide information for each slide that it the lecture will contain. \nInput: \n- Instructions: Additional instructions for generating the lecture outline\n{INSTRUCTIONS}\nOutput: \n- Lecture Outline: The generated lecture outline with the specified sections and slides",
    "REPORT_OUTLINE_PROMPT": "Generate a report based on the input files and instructions provided. The report outline should include the following sections:\nThe number of sections specified, the section name, the section description and each section should have the subsections\nDo not have any text, just give me the report outline\nInput:\n- Instructions: Additional instructions for generating the report outline\n{INSTRUCTIONS}\nOutput:\n- Report Outline: The generated report outline with the specified sections and subsections",
    "RESEARCH_REPORT_PROMPT": "Generate a detailed and professional **research report** in **Markdown format**, incorporating the following user-provided instructions. \nThe structure of the report should include the following key sections:\n1. **Title and Metadata**:\n   - Include a clear and concise title for the research report.\n   - List author name(s).\n   - Optional metadata fields: department, organization, or relevant keywords.\n2. **Abstract**:\n   - Provide a 100-200 word summary of the research topic, its objectives, and key findings.\n   - Highlight the significance of the research in the broader context of the subject area.\n3. **Introduction**:\n   - Write a detailed background on the research topic (100-200 words).\n   - Explain the scope and objectives of the research.\n   - Discuss the importance of the topic, supported by relevant statistics, trends, or contextual information.\n4. **Research Objectives**:\n   - Elaborate on the specific goals or questions the research aims to address.\n   - Include a brief explanation of why these objectives are relevant and significant (100-200 words).\n5. **Methodology**:\n   - Provide a detailed explanation of the approach, tools, or frameworks used in the research.\n   - Discuss data sources, collection methods, and analytical techniques (100-200 words).\n   - Include any challenges or limitations encountered during the process.\n6. **Findings (if applicable)**:\n   - Present the results in detail, using well-organized sections (100-200 words per subsection if necessary).\n   - Use bullet points, tables, or charts as needed to support the narrative.\n   - Ensure clarity by breaking down complex data into understandable segments.\n7. **Discussion (if applicable)**:\n   - Analyze the findings in detail, connecting them to the research objectives.\n   - Provide insights into how the results align or diverge from existing literature.\n   - Suggest potential implications for further research or practical applications (100-200 words).\n8. **Recommendations (if applicable)**:\n   - Offer actionable suggestions or guidelines based on the findings.\n   - Explain how these recommendations can address gaps or challenges identified in the research (100-200 words).\n9. **Conclusion**:\n   - Summarize the research report, reiterating the key findings and their significance (100-200 words).\n   - Highlight the main takeaways and any future considerations.\n10. **References**:\n    - Provide a comprehensive list of all sources cited in the report.\n    - Use a standard citation format (e.g., APA, MLA, or Chicago) and include DOIs or links where applicable.\n11. **Appendices (if applicable)**:\n    - Include supplementary materials, such as raw data, charts, tables, or additional notes that support the research.\nThe output for each section should be detailed and exceed 100-200 words wherever appropriate. Use Markdown formatting to ensure professional structure:\n- Headers: Use `#`, `##`, or `###` for main sections and subsections.\n- Lists: Use bullet points (`-`) or numbered lists (`1.`) as necessary.\n- Emphasis: Apply bold (`**`), italic (`*`), or inline code formatting (```) where relevant.\n- Visuals: Embed links, images, or tables in Markdown syntax to enhance readability.\nEnsure the report is professional, coherent, and suitable for rendering into HTML or PDF for distribution.\n**Example Input Instructions**:\n- Topic: \"The Role of Renewable Energy in Achieving Net Zero Emissions.\"\n- Include a focus on policy implications, current technologies, and future trends.\n- Discuss practical recommendations for scaling renewable energy projects. User's Instructions: \n **{INSTRUCTIONS}**",
    "WHITE_PAPER_PROMPT": "Generate a **white paper** in **Markdown format**, using the following user-provided instructions. \nThe white paper should be professional, well-structured, and aimed at informing or persuading the target audience about a particular topic or solution. Include the following sections:\n1. **Title and Metadata**:\n   - A concise and descriptive title.\n   - Author name(s).\n   - Optional metadata such as organization, department, or relevant tags.\n2. **Executive Summary**:\n   - A 100-200 word overview summarizing the problem, proposed solution, and key takeaways.\n   - This section should give readers a clear understanding of the paper's purpose at a glance.\n3. **Introduction**:\n   - Provide detailed background on the topic, setting the stage for the rest of the paper (100-200 words).\n   - Clearly define the problem or opportunity being addressed.\n   - Explain why the topic is timely, important, or relevant.\n4. **Problem Statement**:\n   - Dive deeper into the issue at hand, using supporting data, examples, or case studies.\n   - Discuss the implications of not addressing the problem (100-200 words).\n5. **Proposed Solution**:\n   - Detail the solution or approach being proposed.\n   - Explain its components, how it works, and why it is effective (100-200 words).\n   - Use diagrams, bullet points, or tables where necessary for clarity.\n6. **Benefits and Justification**:\n   - Describe the advantages of adopting the proposed solution, supported by evidence or analysis.\n   - Highlight potential ROI, efficiency gains, or other measurable outcomes (100-200 words).\n7. **Implementation (if applicable)**:\n   - Provide a roadmap or guidelines for implementing the solution.\n   - Include any prerequisites, steps, or resources required (100-200 words).\n8. **Challenges and Mitigation (if applicable)**:\n   - Address potential challenges or risks involved in adopting the solution.\n   - Provide recommendations or strategies to mitigate these risks (100-200 words).\n9. **Conclusion**:\n   - Summarize the key points of the white paper, reiterating the importance of the solution (100-200 words).\n   - Include a clear call to action, such as contacting the organization for more details or starting implementation.\n10. **References**:\n    - List all sources used to support claims or data in the white paper.\n    - Use a standard citation format (e.g., APA, MLA, or Chicago).\n11. **Appendices (if applicable)**:\n    - Include any additional information, charts, or raw data that supports the paper but is not essential to the main narrative.\nThe output for each section should be detailed and include at least 100-200 words where appropriate, with supplementary bullet points or visuals for clarity. The Markdown formatting should adhere to professional standards:\n- Use `#`, `##`, or `###` for section headers.\n- Employ bullet points (`-`) or numbered lists (`1.`) for lists.\n- Add emphasis with bold (`**`) or italic (`*`) formatting as needed.\n- Embed visuals such as tables, links, or diagrams using Markdown syntax to enhance comprehension. User's Instructions: \n **{INSTRUCTIONS}**",
    "PROJECT_PLAN_PROMPT": "Generate a **comprehensive project plan** in **Markdown format**, following the user-provided instructions. \nThe project plan should clearly outline the project scope, objectives, tasks, timelines, and deliverables, providing a roadmap for successful execution. Include the following sections:\n1. **Title and Metadata**:\n   - A descriptive title for the project plan.\n   - Author or team name(s).\n   - Date of creation.\n   - Optional metadata: organization, project ID, and keywords.\n2. **Executive Summary**:\n   - Provide a concise overview of the project, including its purpose, key objectives, and expected outcomes (100-200 words).\n   - Highlight why the project is critical and what it aims to achieve.\n3. **Project Scope**:\n   - Define the boundaries of the project, including what is included and excluded.\n   - Include key deliverables and success criteria (100-200 words).\n4. **Goals and Objectives**:\n   - Clearly outline the project goals and measurable objectives.\n   - Explain the alignment of these objectives with organizational priorities (100-200 words).\n5. **Project Team**:\n   - List the team members, their roles, and their responsibilities.\n   - Include a brief organizational chart or a bulleted list of roles (e.g., project manager, developers, analysts).\n6. **Tasks and Milestones**:\n   - Provide a detailed breakdown of tasks and associated milestones.\n   - Include subsections for:\n     - Major tasks.\n     - Key milestones.\n     - Deadlines or completion dates.\n7. **Timeline**:\n   - Present a clear timeline for the project.\n   - Use a Markdown-compatible table format or Gantt chart representation for clarity.\n   Example:\n   ```markdown\n   | Task              | Start Date   | End Date     | Status       |\n   |-------------------|--------------|--------------|--------------|\n   | Project Kickoff   | 2024-01-01   | 2024-01-05   | Completed    |\n   | Research Phase    | 2024-01-06   | 2024-02-10   | In Progress  |\n   ```\n8. **Budget (if applicable)**:\n   - Provide an estimated budget, broken down into categories such as personnel, materials, and overhead.\n   - Include a Markdown table to display financial details.\n9. **Risk Assessment (if applicable)**:\n   - Identify potential risks, their likelihood, and impact on the project.\n   - Suggest mitigation strategies for each identified risk.\n10. **Dependencies**:\n    - List any dependencies, such as other projects, external resources, or approvals needed to ensure success.\n11. **Communication Plan**:\n    - Describe how updates will be shared with stakeholders and team members.\n    - Include details on meeting schedules, progress reports, and communication tools.\n12. **Conclusion**:\n    - Summarize the project plan, reaffirming the goals, scope, and expected outcomes (100-200 words).\n    - Include a clear next step or call to action for stakeholders.\n13. **Appendices (if applicable)**:\n    - Include additional details such as raw data, charts, or supplementary materials.\nThe output for each section should be detailed, providing at least 100-200 words where appropriate. Use Markdown formatting for professional structure:\n- Use `#`, `##`, or `###` for section headers.\n- Use bullet points (`-`) or numbered lists (`1.`) for tasks, roles, or steps.\n- Emphasize key points with bold (`**`) or italic (`*`) formatting.\n- Include tables or diagrams using Markdown-compatible syntax where necessary.\n User's Instructions: \n **{INSTRUCTIONS}**",
    "BLOG_PROMPT": "Generate an engaging and professional **blog post** in **Markdown format**, following the user-provided instructions. \nThe blog should be well-structured, easy to read, and tailored to captivate the target audience. Include the following sections:\n### 1. **Title and Metadata**:\n   - A catchy and concise title that grabs attention.\n   - Author name(s).\n   - Date of publication.\n   - Optional metadata: tags, categories, or estimated reading time.\n### 2. **Introduction**:\n   - Write a compelling introduction (100-150 words) that hooks the reader.\n   - Clearly state the topic, why it's important, and what the blog will cover.\n### 3. **Main Content**:\n   - Divide the content into logical sections with appropriate subheadings (`##` for each main point, `###` for subsections).\n   - For each section:\n     - Write 150-200 words explaining the subtopic in detail.\n     - Use bullet points, numbered lists, or examples to enhance clarity.\n     - Include actionable insights, real-world examples, or data to support the narrative.\n   - Add visuals (images, tables, or diagrams) or provide links to external resources for further reading.\n### 4. **Tips or Key Takeaways (if applicable)**:\n   - Summarize the main points or offer practical tips.\n   - Use a bulleted list or concise statements to make it reader-friendly (50-100 words).\n### 5. **Conclusion**:\n   - End with a strong conclusion (100-150 words) that reinforces the blog’s key messages.\n   - Include a call to action (e.g., “Share your thoughts in the comments!” or “Subscribe for more insights.”).\n### 6. **Additional Features (if applicable)**:\n   - **CTA (Call to Action):** Encourage readers to engage, subscribe, or explore related resources.\n   - **Links:** Use Markdown syntax to include hyperlinks to external or internal sources.\n   - **SEO Optimization:** Include keywords naturally throughout the blog to enhance discoverability.\n### Markdown Formatting:\n- Use `#`, `##`, and `###` for headings and subheadings.\n- Use `-` or `1.` for bullet points or numbered lists.\n- Add emphasis with bold (`**`) or italic (`*`) text.\n- Embed images (`![Alt Text](image_url)`) or links (`[Link Text](url)`).\n- Write in an engaging, conversational tone that resonates with the target audience.\n**Output Guidelines**:\nThe blog post should be detailed and well-developed, with **500-800 words in total**. Ensure each section is comprehensive and flows logically into the next.User's Instructions: \n **{INSTRUCTIONS}**",
    "NEWS_LETTER_PROMPT": "Generate a professional and engaging **newsletter** in **Markdown format**, using the content from the provided files and following the user-provided instructions. The newsletter should be concise, visually appealing, and structured for easy readability. Include the following sections:\n### **1. Title and Metadata**:\n   - A compelling title or headline for the newsletter.\n   - Include the edition or issue number if applicable.\n   - Add the date of publication.\n   - Optional metadata: tags, categories, or a short tagline.\n### **2. Header or Banner Section**:\n   - Create a welcoming header that sets the tone for the newsletter.\n   - Include a brief greeting or highlight of the issue (e.g., “Welcome to this month’s edition of [Newsletter Name]!”).\n   - Optional: Include an embedded image, logo, or link in Markdown format.\n### **3. Lead Story or Highlight**:\n   - Start with the most important or engaging topic.\n   - Write 150-200 words summarizing the key point, event, or update.\n   - Provide links or references for readers to explore further.\n### **4. Secondary Sections (Repeatable)**:\n   - Break down the content into subsections, each focusing on a different topic or theme.\n   - Examples of subsections:\n     - **Updates**: Summarize recent developments or news.\n     - **Spotlights**: Highlight a person, product, or event.\n     - **Trends**: Share industry trends, stats, or insights.\n     - **Upcoming Events**: Announce upcoming webinars, launches, or deadlines.\n   For each subsection:\n   - Write 100-150 words per topic.\n   - Use bullet points, numbered lists, or visuals to enhance clarity.\n### **5. Key Insights or Tips (if applicable)**:\n   - Include actionable tips, quick insights, or interesting facts.\n   - Use bullet points or bolded text for emphasis (50-100 words).\n### **6. Call to Action (CTA)**:\n   - Include a clear and persuasive call to action.\n   - Examples:\n     - “Sign up for our upcoming webinar.”\n     - “Explore our latest research report.”\n     - “Contact us to learn more.”\n   - Use bold or emphasized text for visibility.\n### **7. Footer Section**:\n   - Provide contact information, social media links, or subscription details.\n   - Optionally include a brief thank-you message or a note encouraging feedback.\n   - Example Markdown:\n     ```markdown\n    \n     **Contact Us**: [email@example.com](mailto:email@example.com)  \n     **Follow Us**: [LinkedIn](https://linkedin.com) | [Twitter](https://twitter.com)  \n     **Unsubscribe**: [Click here](unsubscribe-link)\n    \n     ```\n### **Markdown Formatting**:\n   - Use `#`, `##`, and `###` for headings and subheadings.\n   - Include bullet points (`-`) or numbered lists for updates and tips.\n   - Use bold (`**`) or italic (`*`) text to highlight important points.\n   - Add embedded links (`[Link Text](url)`) for resources or additional reading.\n   - Include images using Markdown syntax (`![Alt Text](image_url)`).\n**Output Guidelines**:\n- The newsletter should be 1-3 pages long, depending on the input files and the user’s instructions.\n- Each section should be detailed but concise, providing actionable information and keeping the reader engaged.\nUser's Instructions: \n **{INSTRUCTIONS}**",
    "KEY_INSIGHTS_PROMPT": "Generate a concise and professional **key insights report** in **Markdown format**, derived from the content in the provided files and guided by the user-provided instructions. The report should highlight the most critical findings, trends, or actionable takeaways, structured for clarity and impact. Include the following sections:\n### **1. Title and Metadata**:\n   - Create a title that reflects the focus of the key insights.\n   - Include optional metadata such as the author, date, and relevant tags or keywords.\n### **2. Introduction**:\n   - Provide a brief overview (100-150 words) of the report, including:\n     - The context or purpose of the analysis.\n     - What the key insights cover and why they are important.\n### **3. Key Insights**:\n   - Present the main findings or takeaways in a structured format.\n   - For each key insight:\n     - Write a descriptive heading (e.g., `## Insight 1: Title`).\n     - Provide 100-150 words explaining the insight in detail.\n     - Use bullet points or numbered lists to break down supporting information.\n     - Include data, examples, or visuals (if applicable) for context.\n   Example:\n   ```markdown\n   ## Insight 1: Growing Market Trends in Renewable Energy\n   - Investment in renewable energy has grown by 25% year-over-year.\n   - Solar and wind energy projects account for 80% of new investments.\n   - Regions with the highest growth: North America, Europe, and Asia-Pacific.\n   ```\n### **4. Supporting Evidence (if applicable)**:\n   - Summarize data, charts, or research that validate the insights.\n   - Include Markdown tables, diagrams, or links to original data sources for additional context.\n   Example Table:\n   ```markdown\n   | Metric               | 2023 Value | Change from 2022 |\n   |----------------------|------------|------------------|\n   | Solar Investments    | $120B      | +30%             |\n   | Wind Investments     | $80B       | +20%             |\n   | Overall Growth Rate  | -          | +25%             |\n   ```\n### **5. Implications and Recommendations (if applicable)**:\n   - Discuss the significance of the insights and their implications for stakeholders.\n   - Provide actionable recommendations based on the insights (50-100 words per recommendation).\n### **6. Conclusion**:\n   - Summarize the key insights in 50-100 words.\n   - Reinforce their relevance and suggest next steps for the audience.\n### **Markdown Formatting**:\n   - Use `#`, `##`, and `###` for headings and subheadings.\n   - Include bullet points (`-`) or numbered lists to structure insights clearly.\n   - Use bold (`**`) or italic (`*`) text for emphasis.\n   - Embed links (`[Link Text](url)`) and visuals (`![Alt Text](image_url)`) to enhance readability.\n**Output Guidelines**:\n- The report should be **1-3 pages** long, with detailed explanations for each insight.\n- Ensure clarity, professionalism, and actionable content tailored to the target audience.\nUser's instructions:\n{INSTRUCTIONS}",
    "CASE_STUDY_PROMPT": "Generate a professional and well-structured **case study** in **Markdown format**, derived from the provided files and guided by the user-provided instructions. The case study should effectively communicate the challenges, solutions, and results, with clear takeaways for the audience. Include the following sections:\n### **1. Title and Metadata**:\n   - Create a title that reflects the focus of the case study (e.g., \"How [Company/Team] Solved [Challenge] with [Solution]\").\n   - Include metadata such as author name(s), organization, and date of publication.\n### **2. Executive Summary**:\n   - Write a concise summary (100-150 words) covering:\n     - The main challenge or problem.\n     - The solution implemented.\n     - The key results achieved.\n### **3. Introduction**:\n   - Provide context for the case study (100-150 words):\n     - Introduce the subject of the study (e.g., company, organization, or individual).\n     - Describe the industry, background, or scenario leading to the challenge.\n     - Explain why this case is significant or noteworthy.\n### **4. Challenges**:\n   - Detail the challenges or problems faced (150-200 words):\n     - Provide specifics about the issues and their impact.\n     - Use data, quotes, or examples to illustrate the severity of the problem.\n   - Example:\n     ```markdown\n     ## Challenges\n     - **Lack of Scalability**: Existing systems could not handle increasing customer demand.\n     - **High Operational Costs**: Inefficient processes resulted in budget overruns.\n     ```\n### **5. Solution**:\n   - Describe the solution implemented (150-200 words):\n     - Outline the approach taken to address the challenges.\n     - Highlight any tools, technologies, or frameworks used.\n     - Include visuals or diagrams (if applicable) to enhance understanding.\n   Example:\n   ```markdown\n   ## Solution\n   The team implemented a cloud-based AI platform to streamline operations. Key features included:\n   - Predictive analytics for demand forecasting.\n   - Automated workflows for reduced manual intervention.\n   ```\n### **6. Results**:\n   - Present the outcomes achieved (150-200 words):\n     - Use data, KPIs, or anecdotes to show the impact of the solution.\n     - Compare \"before and after\" scenarios to demonstrate measurable improvements.\n   - Include visuals like tables, charts, or bullet points to summarize key metrics.\n   Example Table:\n   ```markdown\n   | Metric                  | Before Solution | After Solution | Improvement  |\n   |-------------------------|-----------------|----------------|--------------|\n   | Customer Response Time  | 48 hours        | 6 hours        | 87.5% Faster |\n   | Operational Costs       | $500K/year      | $300K/year     | 40% Savings  |\n   ```\n### **7. Key Insights and Takeaways**:\n   - Summarize what can be learned from the case (100-150 words):\n     - Highlight transferable lessons or best practices.\n     - Offer actionable advice for similar challenges.\n### **8. Conclusion**:\n   - Conclude with a brief reflection (50-100 words):\n     - Reiterate the success and significance of the case study.\n     - Suggest potential next steps or further applications.\n### **9. Call to Action (if applicable)**:\n   - Include a clear and compelling CTA, such as:\n     - \"Learn more about this solution.\"\n     - \"Contact us for a demo.\"\n     - \"Download the full report here.\"\n### **Markdown Formatting**:\n   - Use `#`, `##`, and `###` for headings and subheadings.\n   - Use bullet points (`-`) or numbered lists to organize details.\n   - Include bold (`**`) or italic (`*`) text for emphasis.\n   - Add visuals, tables, and links where appropriate using Markdown syntax.\n**Output Guidelines**:\n- The case study should be **2-5 pages** long, with each section detailed and well-structured.\n- Ensure the tone is professional, clear, and results-oriented.\nUser's Instructions:\n**{INSTRUCTIONS}**",
    "HANDOUT_PROMPT": "Generate a concise and visually appealing **handout** in **Markdown format**, based on the provided files and guided by the user-provided instructions. The handout should summarize key points, include actionable information, and be designed for quick reference or distribution. Include the following sections:\n### **1. Title and Metadata**:\n   - A clear and engaging title for the handout.\n   - Optional metadata: author name(s), organization, date, and contact information.\n### **2. Objective or Purpose**:\n   - Write a brief 2-3 sentence statement explaining the purpose of the handout.\n   - Example: “This handout provides a quick overview of [Topic], offering actionable insights and key takeaways for [Audience].”\n### **3. Key Sections**:\n   - Break the content into well-defined sections with clear headings. Example sections:\n     - **Overview**: A brief introduction or background (50-100 words).\n     - **Key Points**: A bulleted list of essential takeaways (5-7 points).\n     - **Actionable Steps**: A numbered or bulleted list of actions readers can take.\n     - **Data Highlights (if applicable)**: Use tables, charts, or statistics for clarity.\n     - **FAQs (if applicable)**: Address common questions in a concise Q&A format.\n   Example:\n   ```markdown\n   ## Key Points\n   - AI adoption has grown by 30% annually in the retail sector.\n   - Key benefits include cost savings, improved customer experience, and better forecasting.\n   - Challenges include integration complexity and data privacy concerns.\n   ```\n### **4. Visuals and Highlights**:\n   - Include optional visuals such as tables, diagrams, or icons to make the handout engaging.\n   - Use Markdown syntax for:\n     - Tables:\n       ```markdown\n       | Metric         | Value         | Description          |\n       |----------------|---------------|----------------------|\n       | ROI Increase   | 25%           | Improved efficiency. |\n       ```\n     - Images:\n       ```markdown\n       ![Alt Text](image_url)\n       ```\n### **5. Call to Action (CTA)**:\n   - Include a clear next step or resource for the audience.\n   - Example: “Visit [Website URL] for more details,” or “Contact [Email Address] to learn more.”\n### **6. Footer Section**:\n   - Include contact information or a link to additional resources.\n   - Example Markdown:\n     ```markdown\n     ---\n     **Contact Us**: [email@example.com](mailto:email@example.com)  \n     **Website**: [www.example.com](https://www.example.com)  \n     ---\n     ```\n### **Markdown Formatting**:\n   - Use `#`, `##`, and `###` for headings and subheadings.\n   - Use bullet points (`-`) or numbered lists to organize information.\n   - Include bold (`**`) or italic (`*`) text to emphasize key points.\n   - Incorporate links (`[Link Text](url)`) and visuals for a polished presentation.\n**Output Guidelines**:\n- The handout should be **1-2 pages long**, designed for quick reference.\n- Keep the language concise and focused on the audience’s needs.\n- Ensure the formatting is clean and easy to scan.\nUser's Instructions:\n**{INSTRUCTIONS}**",
    "CONCEPT_LAB_IDEA_PROMPT": "Based on the instructions provided by the user, generate a comprehensive idea for a Streamlit application. The use case should clearly outline the application's purpose, functionality, and key features as specified in the instructions. Ensure the output is structured in Markdown format for clarity and ease of understanding.\n\nInstructions: \n\n{INSTRUCTIONS}\nName:\n\n{NAME}\nDescription:\n\n{DESCRIPTION}",
    "BUSINESS_USE_CASE_PROMPT": "Based on the instructions provided by the user, generate a comprehensive business use case for a Streamlit application. The use case should clearly outline the application's purpose, functionality, and key features as specified in the instructions. Ensure the output is structured in Markdown format for clarity and ease of understanding.\n\nInstructions: \n\n{INSTRUCTIONS}\nName:\n\n{NAME}\nDescription:\n\n{DESCRIPTION}",
    "TECHNICAL_SPECIFICATION_PROMPT": "Using the provided business use case for a Streamlit application, generate detailed technical specifications. The technical specifications should include:  \n\n1. **Application Purpose**: A brief summary of the application's purpose.  \n2. **Data Requirements**: Detailed information on data sources, formats, preprocessing steps, and storage needs.  \n3. **Functional Features**: A list of core features and functionalities, such as user inputs, data processing workflows, and output generation.  \n4. **Visualization Details**: Specifications for visual elements, including types of charts, interactivity, and libraries to be used (e.g., Matplotlib, Plotly).  \n5. **Backend Requirements**: Details about computational processes, machine learning models, or algorithms to be integrated.  \n6. **Frontend Requirements**: Layout, design elements, and interactivity needed for the user interface.  \n7. **Deployment Specifications**: Requirements for hosting, environment setup, and scalability considerations.  \n\nEnsure the output is written in Markdown format with clear headings and subheadings for each section. \nBusiness use case:\n\n{BUSINESS_USE_CASE}",
    "REGENERATE_WITH_FEEDBACK_PROMPT": "Based on the feedback provided, regenerate the content with the necessary improvements. Ensure that the revised content addresses the feedback received and enhances the overall quality, clarity, and relevance of the output. Use the feedback to refine the content structure, language, and details as needed.\n\nContent\n\n{CONTENT} \n\nFeedback:\n\n{FEEDBACK}. Keep the format of the content the same as it is in. For example if the content is in markdown format, return the content in markdown format.",
    "EXTRACT_DIALOGUE_FROM_CONTENT": "Use the content present in the input text and exctract the dialogue only. Do not include music cues, podcast titles, descriptions, or summaries. Example of output format Speaker_Name: Speaker_text Example: Alex: Hey, I'm alex your host. David: Hey Alex, thank you so much for inviting me. <input_text> {text} </input_text>",
    "GENERATE_PODCAST_PROMPT": "Your task is to convert the input text into a conversational and informative podcast transcript. The output must be a dialogue-only format, styled naturally as a conversation between two or more podcast hosts or guest speakers. Add human errors and innotations like uhh, umm, aa, etc to make the conversation seem more natural and realistic. Have exclamations and expressions as well. Ensure that the dialogue reflects an engaging and accessible discussion suitable for an audio audience. Instructions: Input Analysis: Carefully analyze the provided input text for key topics, facts, and ideas. Filter out any irrelevant or overly technical details unless essential for context. Simplify and Engage: Present complex concepts in simple, relatable language. Use anecdotes, analogies, or thought-provoking questions to make the discussion engaging for a general audience. Natural Flow: Structure the dialogue to feel natural and conversational. Alternate speakers frequently and ensure that each contributes meaningfully to the discussion. Names and Style: Use these made-up names for the speakers: Sarah and Jake. Always Jake will start the conversation followed by Sarah. Write dialogue in the format: Speaker: Dialogue sentence. Avoid non-dialogue elements like titles, music cues, or descriptions. Example Output:  Sarah: Great idea! Bilaterally speaking, \"in situ\" means that the formation process occurs at the original site, rather than being transported from somewhere else. Spheroids are these rounded structures often found at the centers of galaxies. Jake: And submillimetre-bright galaxies refer to galaxies that emit a significant amount of their energy in the submillimetre range of the electromagnetic spectrum—essentially, they're super remote and exceptionally bright! Sarah: Exactly! Scientists used advanced telescopes to observe these faint but brilliant galaxies, and the findings suggest that these spheroids formed directly in the galaxies rather than from external materials merging together. It brings a new understanding to how we perceive galaxy evolution! Task: Here is the input text: <input_text> {text} </input_text> Convert it into a podcast dialogue following the format and style shown above. Avoid including any non-dialogue elements. Focus solely on crafting an informative and conversational exchange that captures the essence of the input material. <podcast_dialogue> (Write the dialogue-only transcript here.) </podcast_dialogue>"
}